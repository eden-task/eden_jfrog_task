name: JFrog Build and Publish
on:
  push:
    branches: [ "main", "version-*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  actions: read
  id-token: write
  packages: write
  security-events: write
  attestations: write
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [v1, v2, v3]
    
    env:
      DOCKER_REPO: eden-docker
      IMAGE_NAME: jfrog-task
      JF_URL: https://taskeden.jfrog.io
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: version-${{ matrix.version == 'v1' && '1' || matrix.version == 'v2' && '2' || '3' }}
    
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ env.JF_URL }}
        JF_USER: ${{ secrets.JF_USER }}
        JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
    
    - name: Docker Login
      run: |
        echo "${{ secrets.JF_PASSWORD }}" | docker login taskeden.jfrog.io -u ${{ secrets.JF_USER }} --password-stdin
    
    - name: Build Docker Image
      run: |
        docker build -t taskeden.jfrog.io/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.version }} .
        
    - name: Push Docker Image
      run: |
        docker push taskeden.jfrog.io/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.version }}
    
    - name: Create Build Info
      run: |
        # Set build name and number
        export JFROG_CLI_BUILD_NAME="${{ env.IMAGE_NAME }}-${{ matrix.version }}"
        export JFROG_CLI_BUILD_NUMBER="${{ github.run_number }}"
        
        # Collect environment variables
        jfrog rt build-collect-env
        
        # Add Git information
        jfrog rt build-add-git
    
    - name: Publish Build Info
      run: |
        # Set build name and number
        export JFROG_CLI_BUILD_NAME="${{ env.IMAGE_NAME }}-${{ matrix.version }}"
        export JFROG_CLI_BUILD_NUMBER="${{ github.run_number }}"
        
        # Publish build info
        jfrog rt build-publish

  summary:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Built and pushed 3 Docker images:" >> $GITHUB_STEP_SUMMARY
        echo "- taskeden.jfrog.io/eden-docker/jfrog-task:v1 (baseline with vulnerabilities)" >> $GITHUB_STEP_SUMMARY
        echo "- taskeden.jfrog.io/eden-docker/jfrog-task:v2 (body-parser mitigated)" >> $GITHUB_STEP_SUMMARY
        echo "- taskeden.jfrog.io/eden-docker/jfrog-task:v3 (moment.js replaced with date-fns)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔍 View build info and scan results in JFrog Platform" >> $GITHUB_STEP_SUMMARY